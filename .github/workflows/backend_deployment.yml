name: Backend Deployment (AWS EC2)

on:
  push:
    branches: [backend-CD]
  pull_request:
    branches: [backend-CD]
  workflow_dispatch:
    # Allows you to run this workflow manually from the Actions tab

env: # .env config for backend
  # JWT
  JWT_ACCESS_TOKEN: ${{secrets.JWT_ACCESS_TOKEN}}
  # S3
  S3_ACCESS_KEY_ID: ${{secrets.S3_ACCESS_KEY_ID}}
  S3_SECRET_ACCESS_KEY: ${{secrets.S3_SECRET_ACCESS_KEY}}
  S3_BUCKET_NAME: ${{secrets.S3_BUCKET_NAME}}
  S3_BUCKET_REGION: ap-southeast-1
  # USERS MS
  USERS_DB_URL: ${{secrets.USERS_DB_URL}}
  FRONTEND_URL: http://nusocialife.net
  USERS_BACKEND_URL: http://localhost:5000/api/users
  USERS_PORT: 5000
  EMAIL: nusocialife28@gmail.com
  GCP_ACCESS_TOKEN: ${{secrets.GCP_ACCESS_TOKEN}}
  GCP_REFRESH_TOKEN: ${{secrets.GCP_REFRESH_TOKEN}}
  GCP_CLIENT_SECRET: ${{secrets.GCP_CLIENT_SECRET}}
  GCP_CLIENT_ID: ${{secrets.GCP_CLIENT_ID}}
  # FORUM MS
  FORUM_DB_URL: ${{secrets.FORUM_DB_URL}}
  FORUM_PORT: 4000
  # FINDFRIEND MS
  FINDFRIEND_DB_URL: ${{secrets.FINDFRIEND_DB_URL}}
  FINDFRIEND_PORT: 7000
  # CHAT MS
  CHAT_PORT: 9000

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v2

      - name: Docker Build
        run: |
          docker-compose build \
          --build-arg JWT_ACCESS_TOKEN=${{ env.JWT_ACCESS_TOKEN }} \
          --build-arg S3_ACCESS_KEY_ID=${{ env.S3_ACCESS_KEY_ID }} \
          --build-arg S3_SECRET_ACCESS_KEY=${{ env.S3_SECRET_ACCESS_KEY }} \
          --build-arg S3_BUCKET_NAME=${{ env.S3_BUCKET_NAME }} \
          --build-arg S3_BUCKET_REGION=${{ env.S3_BUCKET_REGION }} \
          --build-arg USERS_DB_URL=${{ env.USERS_DB_URL }} \
          --build-arg FRONTEND_URL=${{ env.FRONTEND_URL }} \
          --build-arg USERS_BACKEND_URL=${{ env.USERS_BACKEND_URL }} \
          --build-arg USERS_PORT=${{ env.USERS_PORT }} \
          --build-arg EMAIL=${{ env.EMAIL }} \
          --build-arg GCP_ACCESS_TOKEN=${{ env.GCP_ACCESS_TOKEN }} \
          --build-arg GCP_REFRESH_TOKEN=${{ env.GCP_REFRESH_TOKEN }} \
          --build-arg GCP_CLIENT_SECRET=${{ env.GCP_CLIENT_SECRET }} \
          --build-arg GCP_CLIENT_ID=${{ env.GCP_CLIENT_ID }} \
          --build-arg FORUM_DB_URL=${{ env.FORUM_DB_URL }} \
          --build-arg FORUM_PORT=${{ env.FORUM_PORT }} \
          --build-arg FINDFRIEND_DB_URL=${{ env.FINDFRIEND_DB_URL }} \
          --build-arg FINDFRIEND_PORT=${{ env.FINDFRIEND_PORT }} \
          --build-arg CHAT_PORT=${{ env.CHAT_PORT }}

      - name: AWS Configure
        run: |
          aws configure

      - name: Run script file
        shell: bash
        run: |
          chmod +x deploy.sh
          ./deploy.sh
